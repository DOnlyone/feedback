<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.bnuz.fb.rbac.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="edu.bnuz.fb.rbac.entity.User" >
    <id column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="USER_NO" property="userNo" jdbcType="INTEGER" />
    <result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="TINYINT" />
    <result column="CLASS_NUM" property="classNum" jdbcType="INTEGER" />
    <result column="GARDE_ID" property="gardeId" jdbcType="INTEGER" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="MOBILE" property="mobile" jdbcType="INTEGER" />
    <result column="TITLE" property="title" jdbcType="TINYINT" />
    <result column="classStr" property="classStr" jdbcType="VARCHAR" />
    <result column="gradeStr" property="gradeStr" jdbcType="VARCHAR" />
    <!--关联属性的映射关系-->
	<collection property="roleList" ofType="edu.bnuz.fb.rbac.entity.Role">
	    <id column="ROLE_ID" property="roleId" jdbcType="BIGINT" />
	    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
	    <result column="DESC" property="desc" jdbcType="VARCHAR" />
	    <collection property="authList" ofType="edu.bnuz.fb.rbac.entity.Authority">
	        <id column="AUTH_ID" property="authId" jdbcType="BIGINT" />
		    <result column="AUTH_NAME" property="authName" jdbcType="VARCHAR" />
		    <result column="DESC" property="desc" jdbcType="CHAR" />
	    </collection>
	</collection>
  </resultMap>
  
  

  <sql id="Base_Column_List" >
    USER_ID, USER_NAME, USER_NO, REAL_NAME, PASSWORD, SEX, CLASS_NUM, GARDE_ID, EMAIL,MOBILE,TITLE
  </sql>
  
  

	<select id="queryUserDetail" resultMap="BaseResultMap" parameterType="java.util.Map" >
		SELECT
			t1.USER_ID,t1.USER_NAME,t1.USER_NO,t1.REAL_NAME,t1.MOBILE,t1.TITLE,t1.SEX,t1.EMAIL,t3.ROLE_ID,
			t3.ROLE_NAME,t5.AUTH_ID,t5.AUTH_NAME,t5.`DESC`
		FROM `USER` t1
		LEFT JOIN USER_TO_ROLE t2 ON t1.USER_ID = t2.USER_ID
		LEFT JOIN ROLE t3 ON t2.ROLE_ID = t3.ROLE_ID
		LEFT JOIN ROLE_TO_AUTH t4 ON t3.ROLE_ID = t4.ROLE_ID
		LEFT JOIN AUTHORITY t5 ON t4.auth_id = t5.auth_id
		<where>
		<if test='userName!=null &amp;&amp; userName.equals("")'>
			and USER_NAME = #{userName}
		</if>
		</where>
	</select>



  <select id="findUsers" resultMap="BaseResultMap" parameterType="edu.bnuz.fb.rbac.entity.User" >
    select 
    <include refid="Base_Column_List" />,t2.VALUE AS classStr,t3.VALUE AS gradeStr
    from USER t1
   	LEFT JOIN SYS_DIC t2 ON t1.CLASS_NUM = t2.DIC_ID
	LEFT JOIN SYS_DIC t3 ON t1.GARDE_ID = t3.DIC_ID
     where (IS_DEL!=1 or IS_DEL IS NULL)
      <if test="userId != null" >
        and USER_ID=#{userId,jdbcType=BIGINT}
      </if>
      <if test="userName != null" >
        and USER_NAME= #{userName,jdbcType=VARCHAR}
      </if>
      <if test="userNo!=null">
      	and USER_NO = #{userNo,jdbcType=INTEGER}
      </if>
      <if test="realName!=null">
      	and REAL_NAME =#{realName,jdbcType=VARCHAR}
      </if>
		
      <if test="classNum != null" >
        and CLASS_NUM = #{classNum,jdbcType=INTEGER}
      </if>
      <if test="gardeId != null" >
        and GARDE_ID = #{gardeId,jdbcType=INTEGER}
      </if>
      <if test="email != null" >
        and EMAIL = #{email,jdbcType=VARCHAR}
      </if>
      <if test="mobile != null" >
        and MOBILE = #{mobile,jdbcType=INTEGER}
      </if>
      <if test="title!=null">
      	and TITLE = #{title,jdbcType=INTEGER}
      </if>
  </select>

  <insert id="createUser11" parameterType="edu.bnuz.fb.rbac.entity.User" >
    insert into USER ( USER_NAME,REAL_NAME,USER_NO,
      PASSWORD, CLASS, gardeId,
      EMAIL, PHONE, SEX)
    values ( #{userName,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},#{userNo,jdbcType=INTEGER},
      #{password,jdbcType=VARCHAR}, #{classNum,jdbcType=INTEGER}, #{gardeId,jdbcType=INTEGER},
      #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT})
  </insert>
  
  

  <update id="updateUserInfo" parameterType="edu.bnuz.fb.rbac.entity.User" >
    update USER
    <set >
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
       <if test="userNo!=null">
      	USER_NO = #{userNo,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        REAL_NAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="classNum != null" >
        CLASS_NUM = #{classNum,jdbcType=INTEGER},
      </if>
      <if test="gardeId != null" >
        GARDE_ID = #{gardeId,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        MOBILE = #{mobile,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=TINYINT},
      </if>
      <if test="title!=null">
      	TITLE = #{title,jdbcType=INTEGER},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>


	<update id="deleteUsers" parameterType="java.util.List" >
		update USER SET IS_DEL = 1 WHERE USER_ID in
		<foreach item="item" collection="list" separator="," open="(" close=")" index="">
	        #{item, jdbcType=BIGINT}
	    </foreach>
	</update>

  <insert id="createUser" parameterType="edu.bnuz.fb.rbac.entity.User" >
    insert into USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="userNo != null" >
      	USER_NO,
      </if>
      <if test="realName!=null">
      	REAL_NAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="classNum != null" >
        CLASS_NUM,
      </if>
      <if test="gardeId != null" >
        GARDE_ID,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="mobile != null" >
        MOBILE,
      </if>
      <if test="title !=null">
      	TITLE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNo !=null">
      	#{userNo,jdbcType=INTEGER},
      </if>
      <if test="realName!=null">
      	#{realName, jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
       <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="classNum != null" >
        #{classNum,jdbcType=INTEGER},
      </if>
      <if test="gardeId != null" >
        #{gardeId,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=INTEGER},
      </if>

    </trim>
  </insert>
  







</mapper>