<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.bnuz.fb.rbac.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="edu.bnuz.fb.rbac.entity.User" >
    <id column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="CLASS" property="class" jdbcType="INTEGER" />
    <result column="GARDE" property="garde" jdbcType="INTEGER" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="real_Name" property="realName" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="INTEGER" />
    <result column="SEX" property="sex" jdbcType="TINYINT" />
    <!--关联属性的映射关系-->
	<collection property="roleList" ofType="edu.bnuz.fb.rbac.entity.Role">
	    <id column="ROLE_ID" property="roleId" jdbcType="BIGINT" />
	    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
	    <result column="DESC" property="desc" jdbcType="VARCHAR" />
	    <collection property="authList" ofType="edu.bnuz.fb.rbac.entity.Authority">
	        <id column="AUTH_ID" property="authId" jdbcType="BIGINT" />
		    <result column="AUTH_NAME" property="authName" jdbcType="VARCHAR" />
		    <result column="DESC" property="desc" jdbcType="CHAR" />
	    </collection>
	</collection>
  </resultMap>
  
  




  <sql id="Base_Column_List" >
    ID, USER_ID, USER_NAME, PASSWORD, CLASS, GARDE, EMAIL, PHONE, SEX
  </sql>
  
  

	<select id="queryUserDetail" resultMap="BaseResultMap" parameterType="java.util.Map" >
		SELECT
			t1.USER_ID,t1.USER_NAME,t1.REAL_NAME,t1.EMAIL,t1.GARDE,t1.PHONE,t1.SEX,t3.ROLE_ID,
			t3.ROLE_NAME,t5.AUTH_ID,t5.AUTH_NAME,t5.`DESC`
		FROM `USER` t1
		LEFT JOIN USER_TO_ROLE t2 ON t1.USER_ID = t2.USER_ID
		LEFT JOIN ROLE t3 ON t2.ROLE_ID = t3.ROLE_ID
		LEFT JOIN ROLE_TO_AUTH t4 ON t3.ROLE_ID = t4.ROLE_ID
		LEFT JOIN AUTHORITY t5 ON t4.auth_id = t5.auth_id
		<where>
		<if test='userName!=null &amp;&amp; userName.equals("")'>
			and USER_NAME = #{userName}
		</if>
		</where>
	</select>



  <select id="findUsers" resultMap="BaseResultMap" parameterType="edu.bnuz.fb.rbac.entity.User" >
    select 
    <include refid="Base_Column_List" />
    from USER
    <where>
      <if test="userId != null" >
        and USER_ID=#{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        and USER_NAME= #{userName,jdbcType=VARCHAR},
      </if>

      <if test="class != null" >
        and CLASS = #{class,jdbcType=INTEGER},
      </if>
      <if test="garde != null" >
        and GARDE = #{garde,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        and EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        and PHONE = #{phone,jdbcType=INTEGER},
      </if>
    </where>

  </select>

  <insert id="createUser" parameterType="edu.bnuz.fb.rbac.entity.User" >
    insert into USER ( USER_NAME,REAL_NAME,USER_NO,
      PASSWORD, CLASS, GARDE,
      EMAIL, PHONE, SEX)
    values ( #{userName,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},#{userNo,jdbcType=INTEGER},
      #{password,jdbcType=VARCHAR}, #{classNum,jdbcType=INTEGER}, #{gardeId,jdbcType=INTEGER},
      #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT})
  </insert>

  <update id="updateUserInfo" parameterType="edu.bnuz.fb.rbac.entity.User" >
    update USER
    <set >
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        REAL_NAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="class != null" >
        CLASS = #{class,jdbcType=INTEGER},
      </if>
      <if test="garde != null" >
        GARDE = #{garde,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from USER
    where ID = #{id,jdbcType=BIGINT}
  </delete>





  <insert id="insertSelective" parameterType="edu.bnuz.fb.rbac.entity.User" >
    insert into USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="class != null" >
        CLASS,
      </if>
      <if test="garde != null" >
        GARDE,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="class != null" >
        #{class,jdbcType=INTEGER},
      </if>
      <if test="garde != null" >
        #{garde,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  







</mapper>